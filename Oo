uniform sampler2D iChannel0;  // 你的图片纹理
uniform float time;
uniform float bloomStrength; // 控制 bloom 的强度
uniform float bloomRadius;   // 控制 bloom 的半径
uniform vec3 bloomColor;     // 控制 bloom 的颜色

vec3 blur(vec2 uv, float radius) {
    vec3 col = vec3(0.0);
    float total = 0.0;
    
    for (float t = -4.0; t <= 4.0; t++) {
        float weight = (1.0 - abs(t)) / 4.0;
        col += texture(iChannel0, uv + vec2(t*radius, 0.0)).rgb * weight;
        total += weight;
    }
    
    col /= total;
    return col;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 uv = fragCoord/iResolution.xy;

    // 从你的图片中采样颜色
    vec3 col = texture(iChannel0, uv).rgb;

    // 使用阈值来提取亮部
    float threshold = 0.8;
    vec3 brightParts = max(col - threshold, vec3(0.0));

    // 双遍高斯模糊处理
    vec3 horizontalBlur = blur(uv, bloomRadius/iResolution.x);
    vec3 verticalBlur = blur(vec2(uv.x, uv.y), bloomRadius/iResolution.y);

    vec3 combinedBlur = (horizontalBlur + verticalBlur) * 0.5;

    vec3 finalColor = col + combinedBlur * bloomStrength * bloomColor;
    fragColor = vec4(finalColor,1.0);
}
